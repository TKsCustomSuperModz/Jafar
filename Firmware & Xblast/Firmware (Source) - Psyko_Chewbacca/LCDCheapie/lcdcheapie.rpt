|--------------------------------------------------------------|
|- ispLEVER Classic 2.0.00.17.20.15 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  lcdcheapie
Project Path         :  D:\dev\xblast\aladdin_xt_mods\LCDCheapie
Project Fitted on    :  Sun Aug 18 23:17:06 2019

Device               :  M4032_30
Package              :  44
GLB Input Mux Size   :  6
Available Blocks     :  2
Speed                :  -7.5
Part Number          :  LC4032V-75T44C
Source Format        :  Pure_VHDL


// Project 'lcdcheapie' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.03 secs
Partition Time                  0.01 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                2
Total Logic Functions           32
  Total Output Pins             7
  Total Bidir I/O Pins          4
  Total Buried Nodes            21
Total Flip-Flops                27
  Total D Flip-Flops            26
  Total T Flip-Flops            1
  Total Latches                 0
Total Product Terms             135

Total Reserved Pins             0
Total Locked Pins               13
Total Locked Nodes              0

Total Unique Output Enables     1
Total Unique Clocks             1
Total Unique Clock Enables      5
Total Unique Resets             0
Total Unique Presets            0

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  2        1      1    -->    50
  I/O / Enable Pins                 2        1      1    -->    50
I/O Pins                           28       11     17    -->    39
Logic Functions                    32       32      0    -->   100
  Input Registers                  30        0     30    -->     0

GLB Inputs                         72       40     32    -->    55
Logical Product Terms             160       96     64    -->    60
Occupied GLBs                       2        2      0    -->   100
Macrocells                         32       32      0    -->   100

Control Product Terms:
  GLB Clock/Clock Enables           2        2      0    -->   100
  GLB Reset/Presets                 2        0      2    -->     0
  Macrocell Clocks                 32        0     32    -->     0
  Macrocell Clock Enables          32       11     21    -->    34
  Macrocell Enables                32        0     32    -->     0
  Macrocell Resets                 32        0     32    -->     0
  Macrocell Presets                32        0     32    -->     0

Global Routing Pool                64       27     37    -->    42
  GRP from IFB                     ..        5     ..    -->    ..
    (from input signals)           ..        1     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        4     ..    -->    ..
  GRP from MFB                     ..       22     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      4    13    17      6/15     0   16      0              0       49       16
  GLB    B      4    19    23      5/15     0   16      0              0       47       15
-------------------------------------------------------------------------------------------
TOTALS:         8    32    40     11/30     0   32      0              0       96       31

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         0      9      0      0      0
  GLB    B   1      0         0      2      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              No
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   7
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
-------------------------------------------------------------------------------------
1     | TDI   |   -  |    |        |                 |       |
2     |  I_O  |   0  | A5 |    *   |LVCMOS33         | Input |pin_xbox_n_lrst
3     |  I_O  |   0  | A6 |        |                 |       |
4     |  I_O  |   0  | A7 |        |                 |       |
5     |GNDIO0 |   -  |    |        |                 |       |
6     |VCCIO0 |   -  |    |        |                 |       |
7     |  I_O  |   0  | A8 |        |                 |       |
8     |  I_O  |   0  | A9 |        |                 |       |
9     |  I_O  |   0  | A10|    *   |LVCMOS33         | Output|pout_lcd_rs
10    | TCK   |   -  |    |        |                 |       |
11    | VCC   |   -  |    |        |                 |       |
12    | GND   |   -  |    |        |                 |       |
13    |  I_O  |   0  | A12|        |                 |       |
14    |  I_O  |   0  | A13|        |                 |       |
15    |  I_O  |   0  | A14|        |                 |       |
16    |  I_O  |   0  | A15|        |                 |       |
17    |INCLK2 |   1  |    |        |                 |       |
18    |  I_O  |   1  | B0 |        |                 |       |
19    |  I_O  |   1  | B1 |        |                 |       |
20    |  I_O  |   1  | B2 |        |                 |       |
21    |  I_O  |   1  | B3 |    *   |LVCMOS33         | Bidir |pinout4_xbox_lad_3_
22    |  I_O  |   1  | B4 |    *   |LVCMOS33         | Bidir |pinout4_xbox_lad_2_
23    | TMS   |   -  |    |        |                 |       |
24    |  I_O  |   1  | B5 |        |                 |       |
25    |  I_O  |   1  | B6 |        |                 |       |
26    |  I_O  |   1  | B7 |    *   |LVCMOS33         | Output|pout_backlight
27    |GNDIO1 |   -  |    |        |                 |       |
28    |VCCIO1 |   -  |    |        |                 |       |
29    |  I_O  |   1  | B8 |    *   |LVCMOS33         | Output|pout_lcd_e
30    |  I_O  |   1  | B9 |        |                 |       |
31    |  I_O  |   1  | B10|        |                 |       |
32    | TDO   |   -  |    |        |                 |       |
33    | VCC   |   -  |    |        |                 |       |
34    | GND   |   -  |    |        |                 |       |
35    |  I_O  |   1  | B12|        |                 |       |
36    |  I_O  |   1  | B13|        |                 |       |
37    |  I_O  |   1  | B14|    *   |LVCMOS33         | Bidir |pinout4_xbox_lad_1_
38    | I_O/OE|   1  | B15|    *   |LVCMOS33         | Bidir |pinout4_xbox_lad_0_
39    |INCLK0 |   0  |    |    *   |LVCMOS33         | Input |pin_xbox_lclk
40    | I_O/OE|   0  | A0 |        |                 |       |
41    |  I_O  |   0  | A1 |    *   |LVCMOS33         | Output|p4out_lcd_d4_d7_3_
42    |  I_O  |   0  | A2 |    *   |LVCMOS33         | Output|p4out_lcd_d4_d7_2_
43    |  I_O  |   0  | A3 |    *   |LVCMOS33         | Output|p4out_lcd_d4_d7_1_
44    |  I_O  |   0  | A4 |    *   |LVCMOS33         | Output|p4out_lcd_d4_d7_0_
-------------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type         Pullup Signal
--------------------------------------------
  39  -- INCLK    --      Up pin_xbox_lclk
   2   A  I/O   2 AB      Up pin_xbox_n_lrst
--------------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P       Slew Pullup Signal
-----------------------------------------------------------------------------
  44   A  9  -   2  2 DFF      R *         --  Fast     Up p4out_lcd_d4_d7_0_
  43   A  9  -   2  2 DFF      R *         --  Fast     Up p4out_lcd_d4_d7_1_
  42   A  9  -   2  2 DFF      R *         --  Fast     Up p4out_lcd_d4_d7_2_
  41   A  9  -   2  2 DFF      R *         --  Fast     Up p4out_lcd_d4_d7_3_
  26   B 11  1  15  3 DFF      R         1 -B  Fast     Up pout_backlight
  29   B  9  -   2  2 DFF      R *         --  Fast     Up pout_lcd_e
   9   A  9  -   2  1 DFF      R *         --  Fast     Up pout_lcd_rs
-----------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P       Slew Pullup Signal
------------------------------------------------------------------------------
  38   B  0  -   0  1 COM          *     1 A-  Fast     Up pinout4_xbox_lad_0_
  37   B  0  -   0  1 COM          *     2 AB  Fast     Up pinout4_xbox_lad_1_
  22   B  0  -   0  1 COM          *     2 AB  Fast     Up pinout4_xbox_lad_2_
  21   B  0  -   0  1 COM          *     2 AB  Fast     Up pinout4_xbox_lad_3_
------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P       Signal
-----------------------------------------------------------------
15   A  3  -   1  1 COM              2 AB  N_37_i
 5   A 11  1   9  2 DFF      R *     2 AB  inst_s_io_cyc
11   A  7  -   2  1 DFF      R *     2 AB  s4_io_reg_addr_0_
10   B  7  -   2  1 DFF      R *     1 A-  s4_io_reg_addr_1_
12   A  7  -   2  1 DFF      R *     1 A-  s4_io_reg_addr_2_
13   A  7  -   2  1 DFF      R *     1 A-  s4_io_reg_addr_3_
 2   B 10  2   4  1 DFF      R *     1 -B  s5_duty_cycle_0_
 5   B 10  2   4  1 DFF      R *     1 -B  s5_duty_cycle_1_
 6   A 10  2   5  1 DFF      R *     2 AB  s5_duty_cycle_2_
 6   B 10  2   4  1 DFF      R *     1 -B  s5_duty_cycle_3_
 8   B 10  2   4  1 DFF      R *     1 -B  s5_duty_cycle_4_
15   B  1  1   1  1 DFF      R       1 -B  s5_pwm_counter_0_
14   B  2  1   2  1 DFF      R       1 -B  s5_pwm_counter_1_
12   B  3  1   3  1 DFF      R       1 -B  s5_pwm_counter_2_
11   B  4  1   4  1 DFF      R       1 -B  s5_pwm_counter_3_
13   B  5  1   2  1 DFF      R       1 -B  s5_pwm_counter_4_
14   A  5  1   2  1 DFF      R *     2 AB  s_fsm_counter_0_
10   A  6  1   3  1 DFF      R *     2 AB  s_fsm_counter_1_
 7   A  8  1   5  1 TFF      R *     2 AB  s_fsm_counter_2_
 8   A 10  1   4  1 DFF      R       2 AB  s_lpc_fsm_state_0_
 9   A  6  1   4  1 DFF      R       2 AB  s_lpc_fsm_state_1_
--   B  6   1  0 PTOE             --     pinout4_xbox_lad_0_.OE
-----------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
N_37_i = !s4_io_reg_addr_1_.Q & !s4_io_reg_addr_2_.Q & !s4_io_reg_addr_3_.Q ; (1 pterm, 3 signals)

inst_s_io_cyc.D = pinout4_xbox_lad_3_.PIN & pinout4_xbox_lad_2_.PIN
       & pinout4_xbox_lad_1_.PIN & pinout4_xbox_lad_0_.PIN
       & !s_fsm_counter_1_.Q & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_1_.Q
    # !pinout4_xbox_lad_3_.PIN & !pinout4_xbox_lad_2_.PIN
       & !pinout4_xbox_lad_1_.PIN & !pinout4_xbox_lad_0_.PIN
       & s_fsm_counter_1_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_1_.Q
    # !pinout4_xbox_lad_3_.PIN & !pinout4_xbox_lad_2_.PIN
       & pinout4_xbox_lad_1_.PIN & s_lpc_fsm_state_0_.Q
       & !s_lpc_fsm_state_1_.Q
    # !pinout4_xbox_lad_3_.PIN & pinout4_xbox_lad_2_.PIN
       & pinout4_xbox_lad_1_.PIN & pinout4_xbox_lad_0_.PIN
       & s_fsm_counter_0_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_1_.Q
    # s_fsm_counter_1_.Q & s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_1_.Q
    # !s_fsm_counter_2_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_1_.Q
    # pinout4_xbox_lad_2_.PIN & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q
    # inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q
    # pinout4_xbox_lad_3_.PIN & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q ; (9 pterms, 10 signals)
inst_s_io_cyc.C = pin_xbox_lclk ; (1 pterm, 1 signal)
inst_s_io_cyc.CE = pin_xbox_n_lrst ; (1 pterm, 1 signal)

p4out_lcd_d4_d7_0_.D = pinout4_xbox_lad_3_.PIN ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_0_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

p4out_lcd_d4_d7_1_.D = pinout4_xbox_lad_0_.PIN ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_1_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

p4out_lcd_d4_d7_2_.D = pinout4_xbox_lad_1_.PIN ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_2_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_2_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

p4out_lcd_d4_d7_3_.D = pinout4_xbox_lad_2_.PIN ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_3_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
p4out_lcd_d4_d7_3_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

pinout4_xbox_lad_0_ = 0 ; (0 pterm, 0 signal)
pinout4_xbox_lad_0_.OE = !s_fsm_counter_1_.Q & s_fsm_counter_2_.Q
       & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

pinout4_xbox_lad_1_ = 0 ; (0 pterm, 0 signal)
pinout4_xbox_lad_1_.OE = !s_fsm_counter_1_.Q & s_fsm_counter_2_.Q
       & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

pinout4_xbox_lad_2_ = 0 ; (0 pterm, 0 signal)
pinout4_xbox_lad_2_.OE = !s_fsm_counter_1_.Q & s_fsm_counter_2_.Q
       & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

pinout4_xbox_lad_3_ = 0 ; (0 pterm, 0 signal)
pinout4_xbox_lad_3_.OE = !s_fsm_counter_1_.Q & s_fsm_counter_2_.Q
       & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

pout_backlight.D = s5_duty_cycle_4_.Q & s5_pwm_counter_0_.Q
       & s5_pwm_counter_1_.Q & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q
       & s5_pwm_counter_4_.Q
    # s5_duty_cycle_3_.Q & s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q & s5_pwm_counter_4_.Q
    # s5_duty_cycle_2_.Q & s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q & s5_pwm_counter_4_.Q
    # s5_duty_cycle_1_.Q & s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q & s5_pwm_counter_4_.Q
    # s5_duty_cycle_0_.Q & s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q & s5_pwm_counter_4_.Q
    # pout_backlight.Q & s5_duty_cycle_3_.Q & !s5_pwm_counter_3_.Q
    # pout_backlight.Q & s5_duty_cycle_2_.Q & !s5_pwm_counter_2_.Q
    # pout_backlight.Q & s5_duty_cycle_1_.Q & !s5_pwm_counter_1_.Q
    # pout_backlight.Q & s5_duty_cycle_0_.Q & !s5_pwm_counter_0_.Q
    # pout_backlight.Q & !s5_duty_cycle_3_.Q & s5_pwm_counter_3_.Q
    # pout_backlight.Q & !s5_duty_cycle_2_.Q & s5_pwm_counter_2_.Q
    # pout_backlight.Q & !s5_duty_cycle_1_.Q & s5_pwm_counter_1_.Q
    # pout_backlight.Q & !s5_duty_cycle_0_.Q & s5_pwm_counter_0_.Q
    # pout_backlight.Q & s5_duty_cycle_4_.Q & !s5_pwm_counter_4_.Q
    # pout_backlight.Q & !s5_duty_cycle_4_.Q & s5_pwm_counter_4_.Q ; (15 pterms, 11 signals)
pout_backlight.C = pin_xbox_lclk ; (1 pterm, 1 signal)

pout_lcd_e.D = pinout4_xbox_lad_2_.PIN ; (1 pterm, 1 signal)
pout_lcd_e.C = pin_xbox_lclk ; (1 pterm, 1 signal)
pout_lcd_e.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

pout_lcd_rs.D = pinout4_xbox_lad_1_.PIN ; (1 pterm, 1 signal)
pout_lcd_rs.C = pin_xbox_lclk ; (1 pterm, 1 signal)
pout_lcd_rs.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & !s4_io_reg_addr_0_.Q & !s_fsm_counter_0_.Q & inst_s_io_cyc.Q
       & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q & N_37_i ; (1 pterm, 8 signals)

s4_io_reg_addr_0_.D = pinout4_xbox_lad_0_.PIN ; (1 pterm, 1 signal)
s4_io_reg_addr_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s4_io_reg_addr_0_.CE = pin_xbox_n_lrst & s_fsm_counter_1_.Q
       & s_fsm_counter_2_.Q & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

s4_io_reg_addr_1_.D = pinout4_xbox_lad_1_.PIN ; (1 pterm, 1 signal)
s4_io_reg_addr_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s4_io_reg_addr_1_.CE = pin_xbox_n_lrst & s_fsm_counter_1_.Q
       & s_fsm_counter_2_.Q & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

s4_io_reg_addr_2_.D = pinout4_xbox_lad_2_.PIN ; (1 pterm, 1 signal)
s4_io_reg_addr_2_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s4_io_reg_addr_2_.CE = pin_xbox_n_lrst & s_fsm_counter_1_.Q
       & s_fsm_counter_2_.Q & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

s4_io_reg_addr_3_.D = pinout4_xbox_lad_3_.PIN ; (1 pterm, 1 signal)
s4_io_reg_addr_3_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s4_io_reg_addr_3_.CE = pin_xbox_n_lrst & s_fsm_counter_1_.Q
       & s_fsm_counter_2_.Q & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (1 pterm, 6 signals)

s5_duty_cycle_0_.D = pinout4_xbox_lad_2_.PIN & s4_io_reg_addr_0_.Q
       & !s_fsm_counter_0_.Q & N_37_i
    # s5_duty_cycle_0_.Q & !N_37_i
    # s5_duty_cycle_0_.Q & s_fsm_counter_0_.Q
    # s5_duty_cycle_0_.Q & !s4_io_reg_addr_0_.Q ; (4 pterms, 5 signals)
s5_duty_cycle_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s5_duty_cycle_0_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q ; (1 pterm, 5 signals)

s5_duty_cycle_1_.D = pinout4_xbox_lad_3_.PIN & s4_io_reg_addr_0_.Q
       & !s_fsm_counter_0_.Q & N_37_i
    # s5_duty_cycle_1_.Q & !N_37_i
    # s5_duty_cycle_1_.Q & s_fsm_counter_0_.Q
    # s5_duty_cycle_1_.Q & !s4_io_reg_addr_0_.Q ; (4 pterms, 5 signals)
s5_duty_cycle_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s5_duty_cycle_1_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q ; (1 pterm, 5 signals)

s5_duty_cycle_2_.D = pinout4_xbox_lad_0_.PIN & s4_io_reg_addr_0_.Q
       & s_fsm_counter_0_.Q & N_37_i
    # s5_duty_cycle_2_.Q & !N_37_i
    # s5_duty_cycle_2_.Q & !s_fsm_counter_0_.Q
    # s5_duty_cycle_2_.Q & !s4_io_reg_addr_0_.Q ; (4 pterms, 5 signals)
s5_duty_cycle_2_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s5_duty_cycle_2_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q ; (1 pterm, 5 signals)

s5_duty_cycle_3_.D = pinout4_xbox_lad_1_.PIN & s4_io_reg_addr_0_.Q
       & s_fsm_counter_0_.Q & N_37_i
    # s5_duty_cycle_3_.Q & !N_37_i
    # s5_duty_cycle_3_.Q & !s_fsm_counter_0_.Q
    # s5_duty_cycle_3_.Q & !s4_io_reg_addr_0_.Q ; (4 pterms, 5 signals)
s5_duty_cycle_3_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s5_duty_cycle_3_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q ; (1 pterm, 5 signals)

s5_duty_cycle_4_.D = pinout4_xbox_lad_2_.PIN & s4_io_reg_addr_0_.Q
       & s_fsm_counter_0_.Q & N_37_i
    # s5_duty_cycle_4_.Q & !N_37_i
    # s5_duty_cycle_4_.Q & !s_fsm_counter_0_.Q
    # s5_duty_cycle_4_.Q & !s4_io_reg_addr_0_.Q ; (4 pterms, 5 signals)
s5_duty_cycle_4_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s5_duty_cycle_4_.CE = !s_fsm_counter_1_.Q & !s_fsm_counter_2_.Q
       & inst_s_io_cyc.Q & s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q ; (1 pterm, 5 signals)

s5_pwm_counter_0_.D = !s5_pwm_counter_0_.Q ; (1 pterm, 1 signal)
s5_pwm_counter_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s5_pwm_counter_1_.D = s5_pwm_counter_0_.Q & !s5_pwm_counter_1_.Q
    # !s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q ; (2 pterms, 2 signals)
s5_pwm_counter_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s5_pwm_counter_2_.D = s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & !s5_pwm_counter_2_.Q
    # !s5_pwm_counter_1_.Q & s5_pwm_counter_2_.Q
    # !s5_pwm_counter_0_.Q & s5_pwm_counter_2_.Q ; (3 pterms, 3 signals)
s5_pwm_counter_2_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s5_pwm_counter_3_.D = s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & !s5_pwm_counter_3_.Q
    # !s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q
    # !s5_pwm_counter_1_.Q & s5_pwm_counter_3_.Q
    # !s5_pwm_counter_0_.Q & s5_pwm_counter_3_.Q ; (4 pterms, 4 signals)
s5_pwm_counter_3_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s5_pwm_counter_4_.D.X1 = s5_pwm_counter_0_.Q & s5_pwm_counter_1_.Q
       & s5_pwm_counter_2_.Q & s5_pwm_counter_3_.Q ; (1 pterm, 4 signals)
s5_pwm_counter_4_.D.X2 = s5_pwm_counter_4_.Q ; (1 pterm, 1 signal)
s5_pwm_counter_4_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s_fsm_counter_0_.D = !( !pinout4_xbox_lad_3_.PIN & s_lpc_fsm_state_0_.Q
       & !s_lpc_fsm_state_1_.Q
    # s_fsm_counter_0_.Q ) ; (2 pterms, 4 signals)
s_fsm_counter_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s_fsm_counter_0_.CE = pin_xbox_n_lrst ; (1 pterm, 1 signal)

s_fsm_counter_1_.D = !( !pinout4_xbox_lad_3_.PIN & s_lpc_fsm_state_0_.Q
       & !s_lpc_fsm_state_1_.Q
    # !s_fsm_counter_1_.Q & !s_fsm_counter_0_.Q
    # s_fsm_counter_1_.Q & s_fsm_counter_0_.Q ) ; (3 pterms, 5 signals)
s_fsm_counter_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s_fsm_counter_1_.CE = pin_xbox_n_lrst ; (1 pterm, 1 signal)

s_fsm_counter_2_.T = !pinout4_xbox_lad_3_.PIN & !pinout4_xbox_lad_2_.PIN
       & !s_fsm_counter_2_.Q & s_lpc_fsm_state_0_.Q & !s_lpc_fsm_state_1_.Q
    # !pinout4_xbox_lad_3_.PIN & pinout4_xbox_lad_2_.PIN & s_fsm_counter_2_.Q
       & s_lpc_fsm_state_0_.Q & !s_lpc_fsm_state_1_.Q
    # s_fsm_counter_1_.Q & s_fsm_counter_0_.Q & s_lpc_fsm_state_1_.Q
    # s_fsm_counter_1_.Q & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q
    # pinout4_xbox_lad_3_.PIN & s_fsm_counter_1_.Q & s_fsm_counter_0_.Q ; (5 pterms, 7 signals)
s_fsm_counter_2_.C = pin_xbox_lclk ; (1 pterm, 1 signal)
s_fsm_counter_2_.CE = pin_xbox_n_lrst ; (1 pterm, 1 signal)

s_lpc_fsm_state_0_.D = !pinout4_xbox_lad_3_.PIN & pin_xbox_n_lrst
       & !pinout4_xbox_lad_2_.PIN & !pinout4_xbox_lad_1_.PIN
       & !pinout4_xbox_lad_0_.PIN & !s_lpc_fsm_state_0_.Q
       & !s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & s_fsm_counter_1_.Q & s_fsm_counter_2_.Q
       & s_fsm_counter_0_.Q & !s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & !s_fsm_counter_2_.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & !s_fsm_counter_1_.Q & s_lpc_fsm_state_0_.Q
       & s_lpc_fsm_state_1_.Q ; (4 pterms, 10 signals)
s_lpc_fsm_state_0_.C = pin_xbox_lclk ; (1 pterm, 1 signal)

s_lpc_fsm_state_1_.D = !pinout4_xbox_lad_3_.PIN & pin_xbox_n_lrst
       & s_lpc_fsm_state_0_.Q & !s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & !s_lpc_fsm_state_0_.Q & s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & !s_fsm_counter_2_.Q & s_lpc_fsm_state_1_.Q
    # pin_xbox_n_lrst & !s_fsm_counter_1_.Q & s_lpc_fsm_state_1_.Q ; (4 pterms, 6 signals)
s_lpc_fsm_state_1_.C = pin_xbox_lclk ; (1 pterm, 1 signal)




